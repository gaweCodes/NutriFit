// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Nutrition.Infrastructure.Write.Database;

#nullable disable

namespace NutriFit.MigrationService.MigrationsNutritionWrite
{
    [DbContext(typeof(NutritionWriteDbContext))]
    [Migration("20250307164228_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Nutrition.Domain.MenuPlans.Entities.MenuPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("MenuPlans", (string)null);
                });

            modelBuilder.Entity("Nutrition.Domain.Recipes.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Recipes", (string)null);
                });

            modelBuilder.Entity("Nutrition.Domain.MenuPlans.Entities.MenuPlan", b =>
                {
                    b.OwnsMany("Nutrition.Domain.MenuPlans.Entities.DayPlan", "Days", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid");

                            b1.Property<DateOnly>("Date")
                                .HasColumnType("date");

                            b1.Property<Guid>("MenuPlanId")
                                .HasColumnType("uuid");

                            b1.HasKey("Id");

                            b1.HasIndex("MenuPlanId");

                            b1.ToTable("DayPlans", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MenuPlanId");

                            b1.OwnsMany("Nutrition.Domain.MenuPlans.Entities.MealSlot", "MealSlots", b2 =>
                                {
                                    b2.Property<Guid>("Id")
                                        .HasColumnType("uuid");

                                    b2.Property<Guid>("DayPlanId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("MealType")
                                        .HasColumnType("integer");

                                    b2.HasKey("Id");

                                    b2.HasIndex("DayPlanId");

                                    b2.ToTable("MealSlots", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("DayPlanId");

                                    b2.OwnsMany("Nutrition.Domain.Recipes.ValueObjects.RecipeId", "RecipeIds", b3 =>
                                        {
                                            b3.Property<Guid>("MealSlotId")
                                                .HasColumnType("uuid");

                                            b3.Property<Guid>("Value")
                                                .HasColumnType("uuid")
                                                .HasColumnName("RecipeId");

                                            b3.HasKey("MealSlotId", "Value");

                                            b3.ToTable("MealSlotRecipes", (string)null);

                                            b3.WithOwner()
                                                .HasForeignKey("MealSlotId");
                                        });

                                    b2.Navigation("RecipeIds");
                                });

                            b1.Navigation("MealSlots");
                        });

                    b.Navigation("Days");
                });
#pragma warning restore 612, 618
        }
    }
}
