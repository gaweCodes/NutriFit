// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Nutrition.Infrastructure.Write.Database;

#nullable disable

namespace NutriFit.MigrationService.MigrationsNutritionWrite
{
    [DbContext(typeof(NutritionWriteDbContext))]
    [Migration("20250307145323_removedRelationToRecipe")]
    partial class removedRelationToRecipe
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Nutrition.Domain.MenuPlans.Entities.DayPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("MenuPlanId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("MenuPlanId");

                    b.ToTable("DayPlans", (string)null);
                });

            modelBuilder.Entity("Nutrition.Domain.MenuPlans.Entities.MealSlot", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DayPlanId")
                        .HasColumnType("uuid");

                    b.Property<int>("MealType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DayPlanId");

                    b.ToTable("MealSlots", (string)null);
                });

            modelBuilder.Entity("Nutrition.Domain.MenuPlans.Entities.MenuPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("MenuPlans", (string)null);
                });

            modelBuilder.Entity("Nutrition.Domain.Recipes.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Recipes", (string)null);
                });

            modelBuilder.Entity("Nutrition.Domain.MenuPlans.Entities.DayPlan", b =>
                {
                    b.HasOne("Nutrition.Domain.MenuPlans.Entities.MenuPlan", null)
                        .WithMany("Days")
                        .HasForeignKey("MenuPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nutrition.Domain.MenuPlans.Entities.MealSlot", b =>
                {
                    b.HasOne("Nutrition.Domain.MenuPlans.Entities.DayPlan", null)
                        .WithMany("MealSlots")
                        .HasForeignKey("DayPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nutrition.Domain.MenuPlans.Entities.DayPlan", b =>
                {
                    b.Navigation("MealSlots");
                });

            modelBuilder.Entity("Nutrition.Domain.MenuPlans.Entities.MenuPlan", b =>
                {
                    b.Navigation("Days");
                });
#pragma warning restore 612, 618
        }
    }
}
